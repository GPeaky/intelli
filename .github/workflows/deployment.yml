name: Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: self-hosted
    environment: intelli

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up .env file
        run: |
          echo "HOST=\"${{ vars.HOST }}\"" > .env
          echo "REDIS_URL=\"${{ vars.REDIS_URL }}\"" >> .env
          echo "DATABASE_URL=\"${{ env.DATABASE_URL }}\"" >> .env
          echo "EMAIL_HOST=\"${{ vars.EMAIL_HOST }}\"" >> .env
          echo "EMAIL_FROM=\"${{ vars.EMAIL_FROM }}\"" >> .env
          echo "EMAIL_NAME=\"${{ vars.EMAIL_NAME }}\"" >> .env
          echo "EMAIL_PASS=\"${{ env.EMAIL_PASS }}\"" >> .env
          echo "GOOGLE_CLIENT_ID=\"${{ vars.GOOGLE_CLIENT_ID }}\"" >> .env
          echo "GOOGLE_CLIENT_SECRET=\"${{ env.GOOGLE_CLIENT_SECRET }}\"" >> .env
          echo "GOOGLE_REDIRECT_URI=\"${{ vars.GOOGLE_REDIRECT_URI }}\"" >> .env

      - name: Decode and save certificates
        run: |
          echo "${{ secrets.JSON_WEB_TOKEN_CRT }}" | base64 -d > ./certs/jsonwebtoken.crt
          echo "${{ secrets.JSON_WEB_TOKEN_KEY }}" | base64 -d > ./certs/jsonwebtoken.key

      - name: Build with Docker Compose
        run: docker-compose build

      - name: Run with Docker Compose
        run: docker-compose up -d
