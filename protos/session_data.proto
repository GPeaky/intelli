syntax = "proto3";

package protos.session_data;

// Main message
message PacketSessionData {
    uint32 m_weather = 1;
    int32 m_trackTemperature = 2;
    int32 m_airTemperature = 3;
    uint32 m_totalLaps = 4;
    uint32 m_trackLength = 5;
    uint32 m_sessionType = 6;
    int32 m_trackId = 7;
    uint32 m_formula = 8;
    uint32 m_sessionTimeLeft = 9;
    uint32 m_sessionDuration = 10;
    uint32 m_pitSpeedLimit = 11;
    uint32 m_gamePaused = 12;
    uint32 m_isSpectating = 13;
    uint32 m_spectatorCarIndex = 14;
    uint32 m_sliProNativeSupport = 15;
    uint32 m_numMarshalZones = 16;
    repeated MarshalZone m_marshalZones = 17; // Lista de MarshalZone
    uint32 m_safetyCarStatus = 18;
    uint32 m_networkGame = 19;
    uint32 m_numWeatherForecastSamples = 20;
    repeated WeatherForecastSample m_weatherForecastSamples = 21; // Lista de WeatherForecastSample
    uint32 m_forecastAccuracy = 22;
    uint32 m_aiDifficulty = 23;
    uint32 m_seasonLinkIdentifier = 24;
    uint32 m_weekendLinkIdentifier = 25;
    uint32 m_sessionLinkIdentifier = 26;
    uint32 m_pitStopWindowIdealLap = 27;
    uint32 m_pitStopWindowLatestLap = 28;
    uint32 m_pitStopRejoinPosition = 29;
    uint32 m_steeringAssist = 30;
    uint32 m_brakingAssist = 31;
    uint32 m_gearboxAssist = 32;
    uint32 m_pitAssist = 33;
    uint32 m_pitReleaseAssist = 34;
    uint32 m_ERSAssist = 35;
    uint32 m_DRSAssist = 36;
    uint32 m_dynamicRacingLine = 37;
    uint32 m_dynamicRacingLineType = 38;
    uint32 m_gameMode = 39;
    uint32 m_ruleSet = 40;
    uint32 m_timeOfDay = 41;
    uint32 m_sessionLength = 42;
    uint32 m_speedUnitsLeadPlayer = 43;
    uint32 m_temperatureUnitsLeadPlayer = 44;
    uint32 m_speedUnitsSecondaryPlayer = 45;
    uint32 m_temperatureUnitsSecondaryPlayer = 46;
    uint32 m_numSafetyCarPeriods = 47;
    uint32 m_numVirtualSafetyCarPeriods = 48;
    uint32 m_numRedFlagPeriods = 49;
}

message MarshalZone {
    float m_zoneStart = 1; // Fraction (0..1) of way through the lap the marshal zone starts
    int32 m_zoneFlag = 2;   // -1 = invalid/unknown, 0 = none, 1 = green, 2 = blue, 3 = yellow
}


message WeatherForecastSample {
    uint32 m_sessionType = 1; // 0 = unknown, 1 = P1, 2 = P2, etc.
    uint32 m_timeOffset = 2;  // Time in minutes the forecast is for
    uint32 m_weather = 3; // Weather - 0 = clear, 1 = light cloud, etc.
    int32 m_trackTemperature = 4; // Track temp. in degrees Celsius
    int32 m_trackTemperatureChange = 5; // Track temp. change – 0 = up, 1 = down, 2 = no change
    int32 m_airTemperature = 6; // Air temp. in degrees Celsius
    int32 m_airTemperatureChange = 7; // Air temp. change – 0 = up, 1 = down, 2 = no change
    uint32 m_rainPercentage = 8; // Rain percentage (0-100)
}