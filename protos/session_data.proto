syntax = "proto3";
package protos.session_data;

// Main message
message PacketSessionData {
    uint32 weather = 1;
    int32 trackTemperature = 2;
    int32 airTemperature = 3;
    uint32 totalLaps = 4;
    uint32 trackLength = 5;
    uint32 sessionType = 6;
    int32 trackId = 7;
    uint32 formula = 8;
    uint32 sessionTimeLeft = 9;
    uint32 sessionDuration = 10;
    uint32 pitSpeedLimit = 11;
    uint32 gamePaused = 12;
    uint32 isSpectating = 13;
    uint32 spectatorCarIndex = 14;
    uint32 sliProNativeSupport = 15;
    uint32 numMarshalZones = 16;
    repeated MarshalZone marshalZones = 17; // Lista de MarshalZone
    uint32 safetyCarStatus = 18;
    uint32 networkGame = 19;
    uint32 numWeatherForecastSamples = 20;
    repeated WeatherForecastSample weatherForecastSamples = 21; // Lista de WeatherForecastSample
    uint32 forecastAccuracy = 22;
    uint32 aiDifficulty = 23;
    uint32 seasonLinkIdentifier = 24;
    uint32 weekendLinkIdentifier = 25;
    uint32 sessionLinkIdentifier = 26;
    uint32 pitStopWindowIdealLap = 27;
    uint32 pitStopWindowLatestLap = 28;
    uint32 pitStopRejoinPosition = 29;
    uint32 steeringAssist = 30;
    uint32 brakingAssist = 31;
    uint32 gearboxAssist = 32;
    uint32 pitAssist = 33;
    uint32 pitReleaseAssist = 34;
    uint32 ERSAssist = 35;
    uint32 DRSAssist = 36;
    uint32 dynamicRacingLine = 37;
    uint32 dynamicRacingLineType = 38;
    uint32 gameMode = 39;
    uint32 ruleSet = 40;
    uint32 timeOfDay = 41;
    uint32 sessionLength = 42;
    uint32 speedUnitsLeadPlayer = 43;
    uint32 temperatureUnitsLeadPlayer = 44;
    uint32 speedUnitsSecondaryPlayer = 45;
    uint32 temperatureUnitsSecondaryPlayer = 46;
    uint32 numSafetyCarPeriods = 47;
    uint32 numVirtualSafetyCarPeriods = 48;
    uint32 numRedFlagPeriods = 49;
}

message MarshalZone {
    float zoneStart = 1; // Fraction (0..1) of way through the lap the marshal zone starts
    int32 zoneFlag = 2;   // -1 = invalid/unknown, 0 = none, 1 = green, 2 = blue, 3 = yellow
}


message WeatherForecastSample {
    uint32 sessionType = 1; // 0 = unknown, 1 = P1, 2 = P2, etc.
    uint32 timeOffset = 2;  // Time in minutes the forecast is for
    uint32 weather = 3; // Weather - 0 = clear, 1 = light cloud, etc.
    int32 trackTemperature = 4; // Track temp. in degrees Celsius
    int32 trackTemperatureChange = 5; // Track temp. change – 0 = up, 1 = down, 2 = no change
    int32 airTemperature = 6; // Air temp. in degrees Celsius
    int32 airTemperatureChange = 7; // Air temp. change – 0 = up, 1 = down, 2 = no change
    uint32 rainPercentage = 8; // Rain percentage (0-100)
}